import { type NextPage } from "next";
import Head from "next/head";
import { useSession } from "next-auth/react";

import { api } from "~/utils/api";
import { Header } from "~/components/Header";
import { useState } from "react";
import dayjs from 'dayjs'
import relativeTime from 'dayjs/plugin/relativeTime'
dayjs.extend(relativeTime);

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>ReactRoles</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Header />
        <Content />
      </main>
    </>
  );
};

export default Home;

const PostJobForm: React.FC = () => {
  const { refetch: refetchJobs } = api.jobs.getAll.useQuery();
  const defaultFormState = {
    company: "",
    title: "",
    salary: 0,
    description: "",
    location: "",
    requirements: "",
    remote: false,
  }
  const [formState, setFormState] = useState(defaultFormState)

  const createJob = api.jobs.create.useMutation({
    onSuccess: () => {
      void refetchJobs();
      setFormState(defaultFormState)
    },
  });
  return (
    <>
      <input type="checkbox" id="job-modal" className="modal-toggle" />
      <div className="modal">
        <div className="modal-box relative">
          <label htmlFor="job-modal" className="btn btn-sm btn-circle absolute right-2 top-2">
            âœ•
          </label>
          <h3 className="text-lg font-bold">Job</h3>
          <div className="form-control w-full">
            <label className="label">
              <span className="label-text">Company</span>
            </label>
            <input onChange={e => setFormState({ ...formState, company: e.target.value })} type="text" placeholder="Type here" className="input input-bordered w-full outline-none" />
          </div>
          <div className="form-control w-full">
            <label className="label">
              <span className="label-text">Job title</span>
            </label>
            <input onChange={e => setFormState({ ...formState, title: e.target.value })} type="text" placeholder="Type here" className="input input-bordered w-full outline-none" />
          </div>
          <div className="form-control w-full">
            <label className="label">
              <span className="label-text">Salary</span>
            </label>
            <input onChange={e => setFormState({ ...formState, salary: +e.target.value })} type="number" placeholder="Type here" className="input input-bordered w-full outline-none" />
          </div>
          <div className="form-control w-full">
            <label className="label">
              <span className="label-text">Job description?</span>
            </label>
            <input onChange={e => setFormState({ ...formState, description: e.target.value })} type="text" placeholder="Type here" className="input input-bordered w-full outline-none" />
          </div>
          <div className="form-control w-full">
            <label className="label">
              <span className="label-text">Location</span>
            </label>
            <input onChange={e => setFormState({ ...formState, location: e.target.value })} type="text" placeholder="Type here" className="input input-bordered w-full outline-none" />
          </div>
          <div className="form-control">
            <label className="label">
              <span className="label-text">Requirements</span>
            </label>
            <textarea onChange={e => setFormState({ ...formState, requirements: e.target.value })} className="textarea textarea-bordered h-24 outline-none" placeholder="Job requirements"></textarea>
          </div>
          <div className="form-control">
            <label className="label cursor-pointer">
              <span className="label-text">Remote ok?</span>
              <input
                type="checkbox"
                className="toggle"
                checked={formState.remote}
                onChange={e => {
                  const isChecked = e.target.checked;
                  setFormState((prevState) => ({
                    ...prevState,
                    remote: isChecked,
                  }));
                }} />
            </label>
          </div>
          <button
            className="btn-primary p-2 w-full mt-2"
            onClick={() => {
              const jobModal = document.getElementById('job-modal') as HTMLInputElement;
              if (jobModal) {
                jobModal.checked = false;
              }
              createJob.mutate(formState)
            }}
          >
            Post job
          </button>
        </div>
      </div>
    </>
  )
}

const Content: React.FC = () => {
  const { data: jobs, refetch: refetchJobs } = api.jobs.getAll.useQuery();
  const { data: sessionData } = useSession();
    const deleteJob = api.jobs.delete.useMutation({
    onSuccess: () => {
      void refetchJobs();
    },
  });
  return (
    <div className="p-16 flex flex-col align-center items-center w-screen justify-center">
      <h1 className="mb-4 text-4xl font-extrabold leading-none tracking-tight text-slate-900 md:text-5xl lg:text-6xl dark:text-white">React Roles</h1>
      <p className="mb-6 text-lg font-normal text-slate-500 lg:text-xl sm:px-16 xl:px-48 dark:text-slate-400 text-center">Welcome to ReactRoles, the premier job board dedicated to React developers! Discover a curated selection of exciting job opportunities in the React ecosystem, ranging from startups to leading tech companies.</p>
      {/* The button to open modal */}
      {sessionData?.user && (
        <>
          <label htmlFor="job-modal" className="btn-primary p-4">
            post a job
          </label>
          <PostJobForm />
        </>
      )}
      <div className="flex flex-col w-screen py-4 max-w-4xl">
        {jobs?.map((job) => (
          <div key={job.id} className="flex justify-between py-4 align-center items-center border border-sky-500 p-4 my-2">
            <div className="flex flex-col">
              <h1>{job.title}</h1>
              <p>{job.company}</p>
            </div>
            <div className="flex gap-2">
              <p className="text-slate-600 text-xs">{dayjs(job.createdAt).fromNow()}</p>
              <button className="btn-warning btn-xs btn px-5" onClick={() => void deleteJob.mutate({ id: job.id })}>
                Delete
              </button>
            </div>

          </div>
        )
        )}
      </div>
    </div>
  )
};
